name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        container:
           image: node:20
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
            path: ~/.npm
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 18
    
        - name: Install Dependencies
          run: npm install
    
        - continue-on-error: true
          run: npm run coverage
          
        - name: Archive Code coverage Result
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
      permissions:
        packages: write
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage ]
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: set lower case owner name
          run: |
             echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
          env:
             OWNER: '${{ github.repository_owner }}'
        - uses: docker/login-action@v2.2.0
          with:
            registry: ghcr.io
            username: ${{ env.OWNER_LC }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: 'ghcr.io/${{ env.OWNER_LC }}/solar-system:${{ github.sha }}'

    dev-deploy:
      runs-on: ubuntu-latest
      needs: docker
      environment: 
        name: development
      steps:
        - uses: actions/checkout@v4
        
        - uses: azure/setup-kubectl@v3.0
          with: 
             version: v1.26.0
        - uses: azure/k8s-set-context@v3.0
          with:
             method: kubeconfig
             kubeconfig: '${{ secrets.KUBECONFIG }}'

        - run: kubectl version --short -o yaml
        - run: echo "INGRESS_IP=kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}'" >> $GITHUB_ENV
        - uses: cschleiden/replace-tokens@v1.3
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: '${{ vars.NAMESPACE }}'
            REPLICAS: '${{ vars.REPLICAS }}'
            IMAGE: 'ghcr.io/inderpreetsaini/solar-system:${{ github.sha }}'
            INGRESS_IP: '${{ env.INGRESS_IP }}'
        - run: cat kubernetes/development/*.yaml
   
